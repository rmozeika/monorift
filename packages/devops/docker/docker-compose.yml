version: '3'
services:
 # webserver:
 #   image: nginx:mainline-alpine
 #   container_name: webserver
 #   # restart: unless-stopped
 #   ports:
 #     - "80:80"
 #     - "443:443"
 #   expose:
 #     - "80"
 #     - "443"
 #   # build: ../nginx/.
 #   volumes:
 #     -  ../data/logs/nginx:/home/logs
 #     - ../data/keys:/private
 #     - ../nginx/remote.conf:/etc/nginx/nginx.conf
 #     - ../data/etc/letsencrypt:/etc/letsencrypt
 #     # - certbot-etc:/etc/letsencrypt
 #     # - certbot-var:/var/lib/letsencrypt
 #   depends_on:
 #     - mrapp
 #   links:
 #     - mrapp
 #   labels:
 #     com.monorift.app: monorift
 mrapp:
  #network_mode: host
  image: 'robertmozeika/rp2-live:latest'
  container_name: mrapp
  restart: always
  ports:
   - '8080:8080'
  # command: ["./wait-for-it.sh", "db-svc:27017", "--", "npm", "start"]
  # command: "tail -f /dev/null"
  volumes:
   - ../data/logs:/logs
   - ../data/logs/node/app.log:/app.log
   - ../../../dist.web:/dist.web
   - ../../../private/docker.conf:/local.conf
  depends_on:
   - db-svc
  links:
   - db-svc
  labels:
   com.monorift.app: monorift
  command: yarn run init:std
 db-svc:
  #network_mode: host
  image: mongo:4.2.2
  container_name: 'mongo'
  env_file:
   - ../../../private/mongodb.env
  volumes:
   - ../data/db:/data/db
   - ../data/logs/mongo:/data/logs
   - ../data/etc/mongo/mongod.conf:/etc/mongod.conf
  command:
   - '--auth'
   - '-f'
   - '/etc/mongod.conf'
  expose:
   - 27017
  ports:
   - '27018:27017'
  labels:
   com.monorift.app: monorift
 redis-svc:
  image: redis:6.0-rc
  container_name: 'redis'
  expose:
   - 6379
  labels:
   com.monorift.app: monorift
 coturn:
  build:
   context: ./coturn
  restart: always
  container_name: coturn
  volumes:
   - ../../../private/coturn/turnserver.conf:/etc/turnserver.conf
   - ../../../private/privkey.pem:/etc/ssl/private/privkey.pem
   - ../../../private/fullchain.pem:/etc/ssl/certs/cert.pem
  ports:
   - '3478:3478'
   - '3478:3478/udp'
   - '3479:3479'
   - '3479:3479/udp'
   - '5349:5349'
   - '5349:5349/udp'
   - '5350:5350'
   - '5350:5350/udp'
  env_file:
   - ../../../private/coturn/coturn.env
   # - mysql/mysql.env
   # - postgresql/postgresql.env
   # - redis/redis.env
   - ../../../private/coturn/mongodb.env
# volumes
# volumes:
#   data-volume:
# Docker Networks
# networks:
#   app-network:
#     driver: bridge

